For more version information see                   http://supercsv.sourceforge.net/versionHistory.html

For more information about the distribution see     http://supercsv.sourceforge.net/distribution.html

version 1.51 + 1.52
-------------------
Small bug fixes.

version 1.50 
-------------

* Added the following cell processors
-- StrReplace - for string manipulation
-- StrRegExReplace - for string manipulation
-- HashMapper - to map encountered values with other objects/values
-- NotNull - to ensure non-null values for columns
-- StrNotNullOrEmpty - to ensure non-null or empty values for columns
-- FmtBoot - format as a string any Boolean value
-- IsIncludedIn - to ensure input value belongs to a specific set of given values

* Deprecated the following cell processors
-- "Required", re-implemented as "RequiredHashCode"

* Unique has been renamed to UniqueHashCode
* A new processor named Unique has been implemented
-- The Unique processor is now based on equals() identity and not anymore on hashCode() identity. Previous definition based on hashCode() has been renamed into UniqueHashCode.

* BeanReader and BeanWriter now supports method overloading of get/set methods.

* Cell processors now only throw SuperCSVException

* Added the following exceptions
-- ClassCastInputCSVException
-- NullInputException: this exception is raised now for unexpected 'null' input value for processor. Numerous processors have been modified to use that exception class.

* better handling of lines without the expected number of columns
-- The raised exception is now associated with a valid CSVContext object (previously, this object was 'null')

* Better error messages, more context information in the exception and available to the programmer

Upgrading from v1.3:
--------------------
* If you are using the Unique processor confirm the new logic is acceptable, otherwise switch to using UniqueHashCode

* Move away from deprecated classes. All deprecated classes should have counter-part classes to replace with

* Notice that e.g. NullInputException is thrown rather than NullPointerException when reading/writing
